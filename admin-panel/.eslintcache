[{"/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/index.js":"1","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/App.js":"2","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/reportWebVitals.js":"3","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/pages/DashboardNew.jsx":"4","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/pages/Error.jsx":"5","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/pages/Plots.jsx":"6","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/Partners.jsx":"7","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/pages/PartnerList.jsx":"8","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/Products.jsx":"9","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/pages/ProductList.jsx":"10","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/pages/AddPartnerForm.jsx":"11","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/pages/AddProductForm.jsx":"12","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/pages/Requests.jsx":"13","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/pages/EndPointsStatus.jsx":"14","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/EndPointsService.jsx":"15","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/DoughnutChart.jsx":"16","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/BarChart.jsx":"17","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/LineChart.jsx":"18","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/Signup.js":"19","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/ForgotPassword.js":"20","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/Login.js":"21","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/contexts/AuthContext.js":"22","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/firebase.js":"23","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/checkD.js":"24","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/PrivateRoute.js":"25","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/UpdateProfile.js":"26","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/NewForms.jsx":"27"},{"size":500,"mtime":1609181533713,"results":"28","hashOfConfig":"29"},{"size":1368,"mtime":1610080368232,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1609181533713,"results":"31","hashOfConfig":"29"},{"size":8291,"mtime":1609831081653,"results":"32","hashOfConfig":"29"},{"size":349,"mtime":1609832464177,"results":"33","hashOfConfig":"29"},{"size":6067,"mtime":1609824415164,"results":"34","hashOfConfig":"29"},{"size":848,"mtime":1609575875348,"results":"35","hashOfConfig":"29"},{"size":2684,"mtime":1610107594726,"results":"36","hashOfConfig":"29"},{"size":742,"mtime":1609580017902,"results":"37","hashOfConfig":"29"},{"size":2097,"mtime":1609591555831,"results":"38","hashOfConfig":"29"},{"size":6894,"mtime":1610089427149,"results":"39","hashOfConfig":"29"},{"size":3582,"mtime":1609593724189,"results":"40","hashOfConfig":"29"},{"size":257,"mtime":1609582210849,"results":"41","hashOfConfig":"29"},{"size":1384,"mtime":1609698091676,"results":"42","hashOfConfig":"29"},{"size":505,"mtime":1609758160359,"results":"43","hashOfConfig":"29"},{"size":845,"mtime":1609842069817,"results":"44","hashOfConfig":"29"},{"size":728,"mtime":1609785534486,"results":"45","hashOfConfig":"29"},{"size":1279,"mtime":1610343475689,"results":"46","hashOfConfig":"29"},{"size":2252,"mtime":1609828067252,"results":"47","hashOfConfig":"29"},{"size":1887,"mtime":1609828100087,"results":"48","hashOfConfig":"29"},{"size":1998,"mtime":1609830992822,"results":"49","hashOfConfig":"29"},{"size":1280,"mtime":1609829569826,"results":"50","hashOfConfig":"29"},{"size":508,"mtime":1609829204930,"results":"51","hashOfConfig":"29"},{"size":1471,"mtime":1609829553334,"results":"52","hashOfConfig":"29"},{"size":412,"mtime":1609830671257,"results":"53","hashOfConfig":"29"},{"size":2834,"mtime":1609829777796,"results":"54","hashOfConfig":"29"},{"size":1987,"mtime":1610080334035,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"17uis3f",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"58"},"/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/index.js",[],["119","120"],"/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/App.js",[],"/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/reportWebVitals.js",[],"/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/pages/DashboardNew.jsx",["121","122","123","124","125","126","127"],"import { FaWarehouse } from \"react-icons/fa\";\nimport { FaChartLine } from \"react-icons/fa\";\nimport { FaHandsHelping } from \"react-icons/fa\";\nimport { FaShoppingCart, FaCartPlus } from \"react-icons/fa\";\nimport { MdPersonAdd } from \"react-icons/md\";\nimport { MdPeople, MdInsertChart } from \"react-icons/md\";\nimport { FiLogOut } from \"react-icons/fi\";\nimport {\n  FcComboChart,\n  FcHighPriority,\n  FcAdvertising,\n  FcShipped,\n  FcShop,\n  FcBusinessman,\n  FcDebt,\n} from \"react-icons/fc\";\n\nimport React, { useState, useEffect } from \"react\";\nimport Partners from \"../components/Partners\";\nimport Plots from \"./Plots\";\nimport AddPartnerForm from \"./AddPartnerForm\";\nimport AddProductForm from \"./AddProductForm\";\nimport { Link } from \"react-router-dom\";\nimport { Products } from \"../components/Products\";\nimport Requests from \"./Requests\";\nimport EndPointsStatus from \"./EndPointsStatus\";\n\nexport default function Dashboard_copy() {\n  const [category, setCategory] = useState(\"plots\");\n  const [items, setItems] = useState({ content: \"\", title: \"\" });\n\n  useEffect(() => {\n    console.log(\"c:\", category);\n    if (category === \"partners\") {\n      setItems({\n        content: <Partners />,\n        title: \"List of All partners!\",\n      });\n    }\n    if (category === \"products\") {\n      setItems({\n        content: <Products />,\n        title: \"List of All Products!\",\n      });\n    }\n    if (category === \"plots\") {\n      setItems({ content: <Plots />, title: \"Sales trends\" });\n    }\n    if (category === \"addPartner\") {\n      setItems({ content: <AddPartnerForm />, title: \"Add partner!\" });\n    }\n    if (category === \"addProduct\") {\n      setItems({ content: <AddProductForm />, title: \"Add product!\" });\n    }\n    if (category === \"requests\") {\n      setItems({ content: <Requests />, title: \"Requests!\" });\n    }\n    if (category === \"status\") {\n      setItems({ content: <EndPointsStatus />, title: \"End-points Health\" });\n    }\n\n    return () => {};\n  }, [category]);\n\n  return (\n    <div>\n      <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\n        <button className=\"btn btn-dark\" onClick={() => setCategory(\"plots\")}>\n          <FaWarehouse />\n        </button>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNavDropdown\"\n          aria-controls=\"navbarNavDropdown\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active\">\n              <button\n                className=\"btn btn-dark\"\n                onClick={() => setCategory(\"plots\")}\n              >\n                Dashboard\n              </button>\n            </li>\n            <li className=\"nav-item\">\n              <button\n                className=\"btn btn-dark\"\n                onClick={() => setCategory(\"products\")}\n              >\n                <FaShoppingCart /> Products\n              </button>\n            </li>\n            <li className=\"nav-item\">\n              <button\n                className=\"btn btn-dark\"\n                onClick={() => setCategory(\"addPartner\")}\n              >\n                <MdPersonAdd /> +Partner\n              </button>\n            </li>\n\n            <li>\n              <Link to=\"/\">\n                <button className=\"btn btn-dark\">\n                  <FiLogOut />\n                  Profile\n                </button>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n      <div className=\"sbar\">\n        {\" \"}\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <nav className=\"col-md-2 d-none d-md-block bg-light sidebar\">\n              <div className=\"sidebar-sticky\">\n                <ul className=\"nav flex-column\">\n                  <li className=\"nav-item\">\n                    <div className=\"nav-link\">\n                      <button\n                        className=\"btn btn-Link\"\n                        onClick={() => setCategory(\"plots\")}\n                      >\n                        <FcComboChart /> Dashboard\n                      </button>\n                    </div>\n                  </li>\n\n                  <li className=\"nav-item\">\n                    <div className=\"nav-link\">\n                      <button\n                        className=\"btn btn-Link\"\n                        onClick={() => setCategory(\"requests\")}\n                      >\n                        <FcAdvertising /> Requests\n                      </button>\n                    </div>\n                  </li>\n                  <li className=\"nav-item\">\n                    <div className=\"nav-link\">\n                      <button\n                        className=\"btn btn-Link\"\n                        onClick={() => setCategory(\"products\")}\n                      >\n                        <FcShop /> Products\n                      </button>\n                    </div>\n                  </li>\n                  <li className=\"nav-item\">\n                    <div className=\"nav-link\">\n                      <button\n                        className=\"btn btn-Link\"\n                        onClick={() => setCategory(\"addProduct\")}\n                      >\n                        <FcShipped /> +Product\n                      </button>\n                    </div>\n                  </li>\n\n                  <li className=\"nav-item\">\n                    <div className=\"nav-link\">\n                      <button\n                        className=\"btn btn-Link\"\n                        onClick={() => setCategory(\"partners\")}\n                      >\n                        <FcDebt /> Partners\n                      </button>\n                    </div>\n                  </li>\n\n                  <li className=\"nav-item\">\n                    <div className=\"nav-link\">\n                      <button\n                        className=\"btn btn-Link\"\n                        onClick={() => setCategory(\"addPartner\")}\n                      >\n                        <FcBusinessman /> +Partner\n                      </button>\n                    </div>\n                  </li>\n                  <li className=\"nav-item\">\n                    <div className=\"nav-link\">\n                      <button\n                        className=\"btn btn-Link\"\n                        onClick={() => setCategory(\"status\")}\n                      >\n                        <FcHighPriority /> Status\n                      </button>\n                    </div>\n                  </li>\n                </ul>\n\n                <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n                  <span>Saved reports</span>\n                  <a className=\"d-flex align-items-center text-muted\">\n                    <span data-feather=\"plus-circle\"></span>\n                  </a>\n                </h6>\n                <ul className=\"nav flex-column mb-2\">\n                  <li className=\"nav-item\">\n                    <a className=\"nav-link\">\n                      <span data-feather=\"file-text\"></span>\n                      Year-end sale\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </nav>\n\n            <main\n              role=\"main\"\n              className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\"\n            >\n              <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\">\n                <h2 className=\"h2\">{items.title}</h2>\n                <div className=\"btn-toolbar mb-2 mb-md-0\">\n                  <div className=\"btn-group mr-2\">\n                    <button className=\"btn btn-sm btn-outline-secondary\">\n                      Share\n                    </button>\n                    <button className=\"btn btn-sm btn-outline-secondary\">\n                      Export\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <>{items.content}</>\n            </main>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/pages/Error.jsx",["128"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport errorGif from \"../images/404.png\";\n\nexport default function Error() {\n  return (\n    <>\n      <img src={errorGif} className=\"center\" width=\"100%\" />\n      <Link to=\"/admin-home\">\n        <button className=\"btn btn-outline-primary\">Home</button>\n      </Link>\n    </>\n  );\n}\n","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/pages/Plots.jsx",["129","130"],"import React, { useState, useEffect } from \"react\";\nimport BarChart from \"../components/BarChart\";\nimport DoughnutChart from \"../components/DoughnutChart\";\nimport EndPointsService from \"../components/EndPointsService\";\nimport LineChart from \"../components/LineChart\";\nimport loadingGif from \"../images/loading2.gif\";\nfunction Plots() {\n  const [doughnutData, setDoughnutData] = useState();\n  const [barData, setBarData] = useState();\n  const [maxEarn, setMaxEarn] = useState();\n  const [lineData, setLineData] = useState();\n\n  useEffect(() => {\n    EndPointsService.getCategoryWiseEarning()\n      .then((response) => {\n        let res = response.data;\n        console.log(\"IN PLOTS:\", Object.keys(res.results));\n\n        let uniqueTypes = getUnique(res.results, \"_id\");\n        let earnTypes = res.results.map((r) => r.sum);\n        let backgroundColor = uniqueTypes.map((l) => getDynamicColor(1));\n        // console.log(\"--->Doughnut:-->\", uniqueTypes, \":::\", earnTypes);\n        setDoughnutData({\n          labels: uniqueTypes,\n          datasets: [\n            {\n              label: \"Sales\",\n              data: earnTypes,\n              backgroundColor,\n            },\n          ],\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    EndPointsService.getPartnerWiseEarning()\n      .then((response) => {\n        let res = response.data;\n        // console.log(\"IN PLOTS(BAR):\", res.results);\n\n        let labels = res.results.map((r) => r._id);\n        let borderColor = labels.map((l) => getDynamicColor(1));\n        let backgroundColor = labels.map((l) => getDynamicColor(0.7));\n        let earnTypes = res.results.map((r) => r.sum);\n        setMaxEarn(1000000);\n\n        // console.log(\"--->BARGRAPH:-->\", labels, \":::\");\n        setBarData({\n          labels: labels,\n          datasets: [\n            {\n              label: \"Companies\",\n              data: earnTypes,\n              borderColor,\n              backgroundColor,\n            },\n          ],\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    console.log(\"BarData::\", barData);\n\n    EndPointsService.getDateWiseEarning()\n      .then((res) => {\n        console.log(\"Line-response:\", res.data);\n        let resLine = res.data;\n        let uniqueTypes2 = getUnique2(resLine.results, \"type\");\n        let carray = getss(resLine, uniqueTypes2).xtype;\n        let liness = getLines(carray, uniqueTypes2);\n        setLineData(liness);\n        console.log(\n          \"\\nIn LINECHART-LOG\",\n          \"RESPONSE: \",\n          resLine,\n          \"---\",\n          \"TYPES: \",\n          uniqueTypes2,\n          \"CARRAY: \",\n          carray,\n          \":::\",\n          \"LINES: \",\n          liness\n        );\n        console.log(\"LineData:(plots)\", lineData);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    //setLineData(res.data)\n  }, []);\n\n  console.log(\"I am plots -->\", doughnutData);\n  /** CHARTJS NEEDS COLORS TO BE DEFINED ... this will help */\n  const getDynamicColor = (alpha) => {\n    let r = Math.floor(Math.random() * 255);\n    let g = Math.floor(Math.random() * 255);\n    let b = Math.floor(Math.random() * 255);\n    return `rgba(${r},${g},${b},${alpha})`;\n  };\n  const getUnique = (items, value) => {\n    return [...new Set(items.map((item) => item[value]))];\n  };\n\n  /**UTILITY FUNCTONS FOR LINE CHART  */\n\n  /**GET DIFFERENT ROOM CATEGORIES */\n  const getUnique2 = (items, value) => {\n    //return [...new Set(items.map((item) => item[value]))];\n    return [...new Set(items.map((item) => item._id[value]))];\n  };\n  /** Sort the data in particular sequence.. here month wise.*/\n  function getss(items, rtype) {\n    console.log(\"\\n\\nIN GETSItems:: \", items, \"types:  \", rtype);\n    return {\n      xtype: rtype.map((t) =>\n        items.results\n          .filter((item) => item._id.type === t)\n          .map((item) => [\n            item.count,\n            item._id.year,\n            item._id.month,\n            item._id.type,\n          ])\n          .sort(compareSecondColumn)\n      ),\n    };\n  }\n  const resize_array_left = (array, length, fill_with) =>\n    new Array(length).fill(fill_with).concat(array).slice(-length);\n  /**FINAL DATA FOR THE LINE PLOT */\n  function getLines(arr, types) {\n    let datasets = [];\n    let datas = arr.map((ar) => ar.map((a) => a[0]));\n    let i;\n\n    let paddedData;\n    let ldata;\n    for (i = 0; i < types.length; i++) {\n      ldata = datas[i];\n      if (ldata.length < 3) {\n        paddedData = resize_array_left(ldata, 3, 0);\n      } else {\n        paddedData = ldata;\n      }\n      console.log(types[i] + \"----\" + datas[i] + \"----\" + paddedData);\n      datasets.push({\n        label: types[i],\n        data: paddedData,\n        borderColor: [getDynamicColor(0.7)],\n        backgroundColor: [getDynamicColor(0.1)],\n        pointBorderColor: getDynamicColor(1),\n        pointBackgroundColor: getDynamicColor(1),\n      });\n    }\n    return datasets;\n  }\n\n  /**Helper function for above function */\n  function compareSecondColumn(a, b) {\n    //same year\n    if (a[1] === b[1]) {\n      //same month\n      if (a[2] === b[2]) {\n        return 0;\n      }\n      // different month\n      else {\n        return a[2] < b[2] ? -1 : 1;\n      }\n    }\n    //different year\n    else {\n      return a[1] < b[1] ? -1 : 1;\n    }\n  }\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <div className=\"card m-1\">\n              <LineChart props={lineData} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <div className=\"card m-1\">\n              <BarChart props={barData} maxEarn={maxEarn} />\n            </div>\n          </div>\n\n          <div className=\"col-sm-6\">\n            <div className=\"card m-1\">\n              <DoughnutChart doughnutData={doughnutData} />\n            </div>\n          </div>\n          <div className=\"col-0\"></div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Plots;\n","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/Partners.jsx",[],"/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/pages/PartnerList.jsx",["131"],"import React, { useState } from \"react\";\nimport loadingGif from \"../images/loading.gif\";\nimport AddPartnerForm from \"./AddPartnerForm\";\n\nexport default function PartnerList({ partners }) {\n  console.log(partners);\n  let posts = partners;\n  console.log(\"I am partner:--->> \", posts);\n\n  const [items, setItems] = useState({ content: \"\", title: \"\" });\n\n  function onToggle(partner) {\n    // parterId = parseInt(parterId);\n    console.log(\"Toggle-clicked\", partner);\n    setItems({\n      title: \"Edit/save\",\n      content: <AddPartnerForm partner={partner} />,\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {posts.length ? (\n          posts.map((post) => (\n            <div className=\"col-sm-4\" key={post.id}>\n              <p> </p>\n              <div className={post.available ? \"card\" : \"card bg-danger\"}>\n                <img className=\"card-img-top\" src={post.logo}></img>\n                <div className=\"card-body\">\n                  <h4 className=\"card-title\">{post.name}</h4>\n                  <p className=\"card-text\">{post.description}</p>\n                </div>\n                <ul className=\"list-group list-group-flush\">\n                  <li className=\"list-group-item\">\n                    <strong>Insurance: </strong> {post.insuranceType}\n                  </li>\n                  <li className=\"list-group-item\">\n                    <strong>endPoint: </strong> {post.endPoints}\n                  </li>\n                  <li className=\"list-group-item\">\n                    <strong>requestBody: </strong> {post.requestBody}\n                  </li>\n\n                  <li className=\"list-group-item\">\n                    <strong>fields: </strong> {post.feilds}\n                  </li>\n                  <li className=\"list-group-item\">\n                    <strong>id: </strong> {post.id}\n                  </li>\n\n                  <li className=\"list-group-item\">\n                    <button\n                      onClick={() => onToggle(post)}\n                      type=\"button\"\n                      className=\"btn btn-success\"\n                    >\n                      Configure\n                    </button>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          ))\n        ) : (\n          <div className=\"container\">\n            <h4>Partners Loading....</h4>\n            <img src={loadingGif} alt=\"loading\" />\n          </div>\n        )}\n      </div>\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\">\n        <h2 className=\"h2\">{items.title}</h2>\n      </div>\n      <>{items.content}</>\n    </div>\n  );\n}\n","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/Products.jsx",[],"/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/pages/ProductList.jsx",["132"],"import React, { useState } from \"react\";\nimport loadingGif from \"../images/loading.gif\";\nimport AddProductForm from \"./AddProductForm\";\n\nfunction ProductList({ products }) {\n  let posts = products;\n  const [items, setItems] = useState({ content: \"\", title: \"\" });\n\n  function handleToggle(product) {\n    console.log(\"Configure-clicked\", product);\n    setItems({\n      title: \"Edit/save\",\n      content: <AddProductForm product={product} />,\n    });\n  }\n\n  console.log(\"I am Products:--->> \", posts);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {posts.length ? (\n          posts.map((post) => (\n            <div className=\"col-sm-4\" key={post.id}>\n              <p> </p>\n              <div className={post.available ? \"card\" : \"card bg-danger\"}>\n                <img className=\"card-img-top\" src={post.imgUrl}></img>\n                <div className=\"card-body\">\n                  <h4 className=\"card-title\">{post.productName}</h4>\n                  <p className=\"card-text\">{post.productDescription}</p>\n                </div>\n                <ul className=\"list-group list-group-flush\">\n                  <li className=\"list-group-item\">\n                    <strong>id: </strong> {post.id}\n                  </li>\n\n                  <li className=\"list-group-item\">\n                    <button\n                      onClick={() => handleToggle(post)}\n                      type=\"button\"\n                      className=\"btn btn-success\"\n                    >\n                      Configure\n                    </button>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          ))\n        ) : (\n          <div className=\"container\">\n            <h4>Products Loading....</h4>\n            <img src={loadingGif} alt=\"loading\" />\n          </div>\n        )}\n      </div>\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\">\n        <h2 className=\"h2\">{items.title}</h2>\n      </div>\n      <>{items.content}</>\n    </div>\n  );\n}\n\nexport default ProductList;\n","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/pages/AddPartnerForm.jsx",["133","134","135"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass AddPartnerForm extends Component {\n  constructor(props) {\n    super(props);\n    if (Object.keys(this.props).length > 0) {\n      this.state = this.props.partner;\n    } else {\n      this.state = {\n        id: \"\",\n        logo: \"\",\n        name: \"\",\n        description: \"\",\n        insuranceType: \"\",\n        endPoints: \"\",\n        available: true,\n        feilds: \"\",\n        requestBody: \"\",\n      };\n    }\n    console.log(\"in constructor:\", Object.keys(this.props).length);\n  }\n  onChangeHandle = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n    console.log(`${e.target.name}:${e.target.value}`);\n  };\n  prettyPrint() {\n    var ugly = document.getElementById(\"myTextArea\").value;\n    var obj;\n    try {\n      obj = JSON.parse(ugly);\n    } catch (e) {\n      alert(\"Check your JSON at:\" + e); // error in the above string (in this case, yes)!\n    }\n    var pretty = JSON.stringify(obj, undefined, 4);\n    document.getElementById(\"myPrettyArea\").value = pretty;\n  }\n  onSubmitForm = (e) => {\n    e.preventDefault();\n    var obj;\n\n    try {\n      obj = JSON.parse(this.state.feilds);\n      console.log(`requestBODY from form:: ${this.state.requestBody}`);\n      let parseRequestBody = JSON.parse(this.state.requestBody);\n      // console.log(\"obj:\", obj);\n      console.log(\"This is request body\", this.state.requestBody);\n\n      //console.log(\"this is type of \", typeof this.state.requestBody);\n      //  console.log(\"This is parsed request body\" + parseRequestBody[\"key\"]);\n      console.log(\"this is type of \", typeof this.state.requestBody);\n\n      console.log(\"state:\", this.state);\n      axios\n        .post(\"http://localhost:9096/test/add-partner\", this.state)\n        .then((response) => {\n          console.log(\"Response:\", response);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      alert(\"Partner Added! \" + this.state.name);\n      console.log(this.state);\n      this.state = {\n        id: \"\",\n        logo: \"\",\n        name: \"\",\n        description: \"\",\n        insuranceType: \"\",\n        endPoints: \"\",\n        available: true,\n        feilds: \"\",\n        requestBody: new Map(),\n      };\n    } catch (e) {\n      alert(\"Check your JSON at: \" + e); // error in the above string (in this case, yes)!\n    }\n  };\n\n  render() {\n    const {\n      id,\n      logo,\n      name,\n      description,\n      insuranceType,\n      endPoints,\n      available,\n      feilds,\n      requestBody,\n    } = this.state;\n    // this.setState({id:this.props.id})\n    console.log(\"in render:\", Object.keys(this.props).length);\n    return (\n      <div\n        className=\"container  align-items-center justify-content-center\"\n        style={{ marginTop: \"1em\" }}\n      >\n        <form onSubmit={this.onSubmitForm}>\n          <div className=\"form-group\">\n            <label htmlFor=\"id\">Enter Partner Id</label>\n            <input\n              type=\"number\"\n              name=\"id\"\n              value={id}\n              onChange={this.onChangeHandle}\n              className=\"form-control\"\n              placeholder=\"Enter Id\"\n            ></input>\n            <label htmlFor=\"name\">Partner-name? </label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.onChangeHandle}\n              className=\"form-control\"\n              placeholder=\"Provide Partner-name\"\n              required\n            ></input>\n            <label htmlFor=\"logo\">Logo Url </label>\n            <input\n              type=\"text\"\n              name=\"logo\"\n              value={logo}\n              onChange={this.onChangeHandle}\n              className=\"form-control\"\n              placeholder=\"Your Logo Here\"\n              required\n            ></input>\n            <label htmlFor=\"description\">Enter Description</label>\n            <input\n              type=\"text\"\n              name=\"description\"\n              value={description}\n              onChange={this.onChangeHandle}\n              className=\"form-control\"\n              placeholder=\"Your description..\"\n              required\n            ></input>\n            <label htmlFor=\"insuranceType\">Enter Insurance Type</label>\n            <input\n              type=\"text\"\n              name=\"insuranceType\"\n              value={insuranceType}\n              onChange={this.onChangeHandle}\n              className=\"form-control\"\n              placeholder=\"Insurance Type .. car, home etc..\"\n              required\n            ></input>\n            <label htmlfor=\"endPoints\">End-Points</label>\n            <input\n              type=\"text\"\n              name=\"endPoints\"\n              value={endPoints}\n              onChange={this.onChangeHandle}\n              placeholder=\"like.. http://your-domain.com/resource\"\n              className=\"form-control\"\n              required\n            ></input>\n            <br />\n            <label htmlfor=\"available\">Is Available?</label>\n            <select\n              className=\"custom-select\"\n              name=\"available\"\n              value={available}\n              onChange={this.onChangeHandle}\n              required\n            >\n              <option value={true}>True</option>\n              <option value={false}>False</option>\n            </select>\n            <label htmlFor=\"feilds\">Input form field details</label>\n            <textarea\n              id=\"myTextArea\"\n              rows=\"5\"\n              type=\"text\"\n              name=\"feilds\"\n              value={feilds}\n              onChange={this.onChangeHandle}\n              placeholder=\"Input form details in JSON-Stringified form!\"\n              className=\"form-control\"\n              required\n            ></textarea>\n            <br />\n            <input\n              type=\"button\"\n              className=\"btn btn-primary\"\n              value=\"Pretty\"\n              onClick={this.prettyPrint.bind(this)}\n            ></input>\n            <br />\n            <br />\n            <textarea\n              id=\"myPrettyArea\"\n              rows=\"5\"\n              type=\"text\"\n              placeholder=\"Pretty JSON!\"\n              className=\"form-control\"\n            ></textarea>\n            <p>Re-edit the fields input!</p>\n            <br />\n            <br />\n            <br />\n            <textarea\n              id=\"myRequestBody\"\n              rows=\"5\"\n              type=\"text\"\n              name=\"requestBody\"\n              value={requestBody}\n              onChange={this.onChangeHandle}\n              placeholder=\"Map the request body with the API signature\"\n              className=\"form-control\"\n              required\n            ></textarea>\n            <button type=\"submit\" className=\"btn btn-success\">\n              Add\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddPartnerForm;\n","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/pages/AddProductForm.jsx",["136"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass AddProductForm extends Component {\n  constructor(props) {\n    super(props);\n    if (Object.keys(this.props).length > 0) {\n      this.state = this.props.product;\n    } else {\n      this.state = {\n        id: \"\",\n        imgUrl: \"\",\n        productDescription: \"\",\n        productName: \"\",\n        available: true,\n      };\n    }\n    console.log(\"in constructor:\", Object.keys(this.props).length);\n  }\n  onChangeHandle = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n    console.log(`${e.target.name}:${e.target.value}`);\n  };\n\n  onSubmitForm = (e) => {\n    e.preventDefault();\n    console.log(this.state);\n    axios\n      .post(\"http://localhost:9096/test/addProduct\", this.state)\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    alert(\"Product Added \" + this.state.id);\n    this.state = {\n      id: \"\",\n      imgUrl: \"\",\n      productDescription: \"\",\n      productName: \"\",\n      available: true,\n    };\n  };\n\n  render() {\n    const {\n      id,\n      imgUrl,\n      productDescription,\n      productName,\n      available,\n    } = this.state;\n    // this.setState({id:this.props.id})\n    console.log(\"in render:\", Object.keys(this.props).length);\n    return (\n      <div\n        className=\"container  align-items-center justify-content-center\"\n        style={{ marginTop: \"1em\" }}\n      >\n        <form onSubmit={this.onSubmitForm}>\n          <div className=\"form-group\">\n            <label htmlFor=\"id\">Enter product Id</label>\n            <input\n              type=\"number\"\n              name=\"id\"\n              value={id}\n              onChange={this.onChangeHandle}\n              className=\"form-control\"\n              placeholder=\"Enter Id\"\n              required\n            ></input>\n            <label htmlFor=\"productName\">Product-name? </label>\n            <input\n              type=\"text\"\n              name=\"productName\"\n              value={productName}\n              onChange={this.onChangeHandle}\n              className=\"form-control\"\n              placeholder=\"Provide product-name\"\n              required\n            ></input>\n            <label htmlFor=\"imgUrl\">Logo Url </label>\n            <input\n              type=\"text\"\n              name=\"imgUrl\"\n              value={imgUrl}\n              onChange={this.onChangeHandle}\n              className=\"form-control\"\n              placeholder=\"Your Logo Here\"\n              required\n            ></input>\n            <label htmlFor=\"productDescription\">Enter Description</label>\n            <input\n              type=\"text\"\n              name=\"productDescription\"\n              value={productDescription}\n              onChange={this.onChangeHandle}\n              className=\"form-control\"\n              placeholder=\"Your description..\"\n              required\n            ></input>\n\n            <br />\n            <label htmlfor=\"available\">Is Available?</label>\n            <select\n              className=\"custom-select\"\n              name=\"available\"\n              value={available}\n              onChange={this.onChangeHandle}\n              required\n            >\n              <option value={true}>True</option>\n              <option value={false}>False</option>\n            </select>\n\n            <br />\n            <br />\n\n            <button type=\"submit\" className=\"btn btn-success\">\n              Add\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddProductForm;\n","/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/pages/Requests.jsx",[],"/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/pages/EndPointsStatus.jsx",[],"/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/EndPointsService.jsx",[],"/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/DoughnutChart.jsx",[],"/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/BarChart.jsx",[],"/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/LineChart.jsx",[],"/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/Signup.js",[],"/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/ForgotPassword.js",[],"/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/Login.js",[],"/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/contexts/AuthContext.js",[],"/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/firebase.js",[],"/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/checkD.js",[],"/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/PrivateRoute.js",[],"/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/UpdateProfile.js",[],"/home/anorak/Documents/work/training/draft-ui/axis-grad/admin-v0.1/src/components/NewForms.jsx",["137","138","139","140"],"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nfunction NewForms() {\n  const { register, handleSubmit, errors } = useForm();\n  let formdata = [];\n  const [arr, setArr] = useState({ field: [] });\n  const [details, setDetails] = useState({ key: \"\" });\n  // let csvToJson = require(\"convert-csv-to-json\");\n\n  // let json = csvToJson.getJsonFromCsv(\"myInputFile.csv\");\n  // // console.log(\"frm file\", JSON.stringify(json));\n\n  const onSubmit = (data) => {\n    // setArr(\",\" + arr.concat(JSON.stringify(data)));\n    // setArr(arr.push(JSON.stringify(data)));\n\n    setArr((prevState) => {\n      return {\n        ...prevState,\n        field: [...prevState.field, JSON.stringify(data)],\n      };\n    });\n\n    console.log(arr);\n  };\n\n  function generateMe() {\n    console.log(\"clicked:\", arr);\n    console.log(arr.field.join());\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input type=\"text\" name=\"id\" placeholder=\"enter ID\" />\n        <input type=\"text\" name=\"description\" placeholder=\"Enter description\" />\n        <input type=\"text\" name=\"logo\" placeholder=\"enter logo\" />\n        <input type=\"text\" name=\"lable\" placeholder=\"enter titile of field\" />\n\n        <select name=\"type\" ref={register}>\n          <option value=\"text\">text</option>\n          <option value=\"number\">number</option>\n          <option value=\"email\">email</option>\n          <option value=\"date\">date</option>\n        </select>\n\n        <input name=\"name\" ref={register} placeholder=\"Enter name of field\" />\n        <input\n          name=\"placeholder\"\n          ref={register}\n          placeholder=\"Enter placeholder for field\"\n        />\n        <input\n          name=\"validation.required\"\n          ref={register}\n          placeholder=\"Enter message\"\n        />\n\n        <input type=\"submit\" />\n      </form>\n      <button className=\"btn btn-primary\" onClick={generateMe}>\n        Generate\n      </button>\n    </div>\n  );\n}\nexport default NewForms;\n",{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":21},{"ruleId":"145","severity":1,"message":"149","line":3,"column":10,"nodeType":"147","messageId":"148","endLine":3,"endColumn":24},{"ruleId":"145","severity":1,"message":"150","line":4,"column":26,"nodeType":"147","messageId":"148","endLine":4,"endColumn":36},{"ruleId":"145","severity":1,"message":"151","line":6,"column":10,"nodeType":"147","messageId":"148","endLine":6,"endColumn":18},{"ruleId":"145","severity":1,"message":"152","line":6,"column":20,"nodeType":"147","messageId":"148","endLine":6,"endColumn":33},{"ruleId":"153","severity":1,"message":"154","line":204,"column":19,"nodeType":"155","endLine":204,"endColumn":71},{"ruleId":"153","severity":1,"message":"154","line":210,"column":21,"nodeType":"155","endLine":210,"endColumn":45},{"ruleId":"156","severity":1,"message":"157","line":8,"column":7,"nodeType":"155","endLine":8,"endColumn":61},{"ruleId":"145","severity":1,"message":"158","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":18},{"ruleId":"159","severity":1,"message":"160","line":95,"column":6,"nodeType":"161","endLine":95,"endColumn":8,"suggestions":"162"},{"ruleId":"156","severity":1,"message":"157","line":29,"column":17,"nodeType":"155","endLine":29,"endColumn":63},{"ruleId":"156","severity":1,"message":"157","line":27,"column":17,"nodeType":"155","endLine":27,"endColumn":65},{"ruleId":"145","severity":1,"message":"163","line":46,"column":7,"nodeType":"147","messageId":"148","endLine":46,"endColumn":10},{"ruleId":"145","severity":1,"message":"164","line":48,"column":11,"nodeType":"147","messageId":"148","endLine":48,"endColumn":27},{"ruleId":"165","severity":1,"message":"166","line":67,"column":7,"nodeType":"167","endLine":67,"endColumn":11},{"ruleId":"165","severity":1,"message":"166","line":39,"column":5,"nodeType":"167","endLine":39,"endColumn":9},{"ruleId":"145","severity":1,"message":"168","line":4,"column":35,"nodeType":"147","messageId":"148","endLine":4,"endColumn":41},{"ruleId":"145","severity":1,"message":"169","line":5,"column":7,"nodeType":"147","messageId":"148","endLine":5,"endColumn":15},{"ruleId":"145","severity":1,"message":"170","line":7,"column":10,"nodeType":"147","messageId":"148","endLine":7,"endColumn":17},{"ruleId":"145","severity":1,"message":"171","line":7,"column":19,"nodeType":"147","messageId":"148","endLine":7,"endColumn":29},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'FaChartLine' is defined but never used.","Identifier","unusedVar","'FaHandsHelping' is defined but never used.","'FaCartPlus' is defined but never used.","'MdPeople' is defined but never used.","'MdInsertChart' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'loadingGif' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'barData', 'getLines', 'getss', and 'lineData'. Either include them or remove the dependency array.","ArrayExpression",["174"],"'obj' is assigned a value but never used.","'parseRequestBody' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression","'errors' is assigned a value but never used.","'formdata' is assigned a value but never used.","'details' is assigned a value but never used.","'setDetails' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},"Update the dependencies array to be: [barData, getLines, getss, lineData]",{"range":"177","text":"178"},[2897,2899],"[barData, getLines, getss, lineData]"]